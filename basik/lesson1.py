import math as m


#1. Поработайте с переменными, создайте несколько, выведите на экран, запросите у пользователя несколько чисел и строк и сохраните в переменные, выведите на экран.
def exaple():
    answer = int(input('Введите число: '))
    print(f'квадратный корень числа: {answer} будет {m.sqrt(answer)}')


#2. Пользователь вводит время в секундах. Переведите время в часы, минуты и секунды и выведите в формате чч:мм:сс. Используйте форматирование строк.
def hour():
    answer = int(input('Введите число: '))
    hour = m.trunc(answer//3600)
    minut = m.trunc(answer/60)%60
    second = answer%60
    end = f'Если перевести {answer} в часы то получится {hour} часов {minut} минут и {second} секунд'
    print(end)

#3. Узнайте у пользователя число n. Найдите сумму чисел n + nn + nnn. Например, пользователь ввёл число 3. Считаем 3 + 33 + 333 = 369.
# Это часть не работает, причину не понял
def sum_n():
    answer = int(input('Введите число: '))
    step = int(input('Введите введите степень: '))
    end = 0
    for i in range(1, step+1):
        end += answer**i
    print(end)
# sum_n()

#4. Пользователь вводит целое положительное число. Найдите самую большую цифру в числе. Для решения используйте цикл while и арифметические операции.

def big():
    answer = input('Введите число: ')
    t_answer= tuple(answer)
    end = 0
    i = 0
    while i < len(t_answer):
        a = int(t_answer[i])
        if a >= int(end):
            end = t_answer[i]
            return end
        i+=1
    print(end)

#big()


#5. Запросите у пользователя значения выручки и издержек фирмы. Определите, с каким финансовым результатом работает фирма 
#(прибыль — выручка больше издержек, или убыток — издержки больше выручки). Выведите соответствующее сообщение. 
#Если фирма отработала с прибылью, вычислите рентабельность выручки (соотношение прибыли к выручке). 
#Далее запросите численность сотрудников фирмы и определите прибыль фирмы в расчете на одного сотрудника.

def commerc():
    up = int(input('Сколько вы заработали в этом месяце: '))
    down = int(input('Сколько вы потратили в этом месяце: '))
    piple = int(input('Укажите колличество сотрудников: '))
    if (up > down):
            print(f'Это был успешный месяц, вы заработали {up-down} у.е')
            print(f'Рентабильность вашей деятельность сооставила {up/down*100}%')
            print(f'Каждый сотрудник принес {(up-down)//piple} у.е прибыли')
    elif (up < down):
            print(f'Это был тяжелый месяц, вы потеряли {down-up} у.е')
    elif (up == down):
            print(f'Вы еле держитесь на плову, нужно больше золота')

#commerc()    


#6. Спортсмен занимается ежедневными пробежками. В первый день его результат составил a километров. 
#Каждый день спортсмен увеличивал результат на 10 % относительно предыдущего. 
#Требуется определить номер дня, на который общий результат спортсмена составить не менее b километров. 
#Программа должна принимать значения параметров a и b и выводить одно натуральное число — номер дня.

def zoj():
    a = int(input('Сколько пробежал в первый день: '))
    b = int(input('Какова цель: '))
    i = 0
    while a < b:
        a += a*0.1
        i +=1
    print(f'Цель достугнута за {i} дней')  

#zoj() 


